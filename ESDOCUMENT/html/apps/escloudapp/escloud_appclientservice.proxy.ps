<?php
/*
 * APP服务代理
* @author yanghuiqiang 20140521
*/
class ProxyEscloudappEscloud_appclientservice extends AgentProxyAbstract
{
	const SERVICE_NAME = "escloud_appservice";
	/**
	 * 获取档案订阅列表总记录数
	 *
	 */
	public function getSubscribeCount($params)
	{
		$url = "getSubscribeCount";
		return $this->post(self::SERVICE_NAME, $url, $params, "application/json;charset=UTF-8");
	}

	/**
	 * 获取档案订阅列表
	 *
	 */
	public function getSubscribeList($params)
	{
		$url = "getSubscribeList";
		return $this->post(self::SERVICE_NAME, $url, $params, "application/json;charset=UTF-8");
	}

	/**
	 * 获取档案订阅详细信息
	 *
	 */
	public function getSubscribe($params)
	{
		$url = "getSubscribe";
		return $this->post(self::SERVICE_NAME, $url, $params, "application/json;charset=UTF-8");
	}

	/**
	 * 获取档案预约列表总记录数
	 *
	 */
	public function getReserveCount($params)
	{
		$url = "getReserveCount";
		return $this->post(self::SERVICE_NAME, $url, $params, "application/json;charset=UTF-8");
	}

	/**
	 * 获取档案订阅列表
	 *
	 */
	public function getReserveList($params)
	{
		$url = "getReserveList";
		return $this->post(self::SERVICE_NAME, $url, $params, "application/json;charset=UTF-8");
	}

	/**
	 * 获取档案订阅详细信息
	 *
	 */
	public function getReserveById($params)
	{
		$url = "getReserveById";
		return $this->post(self::SERVICE_NAME, $url, $params, "application/json;charset=UTF-8");
	}

	/**
	 * 修改预约信息
	 *
	 */
	public function updateReserveStatus($params)
	{
		$url = "updateReserveStatus";
		return $this->post(self::SERVICE_NAME, $url, $params, "application/json;charset=UTF-8");
	}

	/**
	 * 获取用户的消息推送列表
	 *
	 */
	public function getAPPMessageList($params)
	{
		$url = "getAllUserAPPMessageList";
		return $this->post(self::SERVICE_NAME, $url, $params, "application/json;charset=UTF-8");
	}

	/**
	 * 获取用户的消息推送列表数目
	 *
	 */
	public function getAPPMessageCount($params)
	{
		$url = "getAllUserAPPMessageCount";
		return $this->post(self::SERVICE_NAME, $url, $params, "application/json;charset=UTF-8");
	}

	/**
	 * 获取用户的消息详细信息
	 *
	 */
	public function getAPPMessageById($params)
	{
		$url = "getAPPMessageById";
		return $this->post(self::SERVICE_NAME, $url, $params, "application/json;charset=UTF-8");
	}

	/**
	 * 删除消息
	 * 
	 * @param unknown_type $params
	 */
	public function deleteMessages($params)
	{
		$url = "deleteMessages";
		return $this->post(self::SERVICE_NAME, $url, $params, "application/json;charset=UTF-8");
	}
	
	/**
	 * 给所有用户发送消息
	 *
	 */
	public function sendMessageToAllUser($params)
	{
		$url = "sendMessageToAllUser";
		return $this->post(self::SERVICE_NAME, $url, $params, "application/json;charset=UTF-8");
	}
	
	/**
	 * 增加Banner信息
	 *
	 */
	public function addBanner($params)
	{
		$url = "addBanner";
		return $this->post(self::SERVICE_NAME, $url, $params, "application/json;charset=UTF-8");
	}
	
	/**
	 * 修改Banner信息
	 *
	 */
	public function updateBanner($params)
	{
		$url = "updateBanner";
		return $this->post(self::SERVICE_NAME, $url, $params, "application/json;charset=UTF-8");
	}

	/**
	 * 删除Banner信息
	 *
	 */
	public function deleteBanner($params)
	{
		$url = "deleteBanner";
		return $this->post(self::SERVICE_NAME, $url, $params, "application/json;charset=UTF-8");
	}

	/**
	 * 获取Banner信息列表
	 *
	 */
	public function getBanners($params)
	{
		$url = "getBanners";
		return $this->post(self::SERVICE_NAME, $url, $params, "application/json;charset=UTF-8");
	}

	/**
	 * 根据id获取Banner信息
	 *
	 */
	public function getBannerById($params)
	{
		$url = "getBannerById";
		return $this->post(self::SERVICE_NAME, $url, $params, "application/json;charset=UTF-8");
	}

	/**
	 * 获取Banner信息列表数目
	 *
	 */
	public function getBannerCount($params)
	{
		$url = "getBannerCount";
		return $this->post(self::SERVICE_NAME, $url, $params, "application/json;charset=UTF-8");
	}

	/**
	 * 更新版本
	 *
	 */
	public function addOrUpdateUpdateInfo($params)
	{
		$url = "addOrUpdateUpdateInfo";
		return $this->post(self::SERVICE_NAME, $url, $params, "application/json;charset=UTF-8");
	}

	public function getUpdateUrl(){
		$urlParam=array('addOrUpdateUpdateInfo');
		$url=implode('/',$urlParam);
		$restUrl = $this->getUri(self::SERVICE_NAME, $url);
		return $restUrl;
	}

	/**
	 * 获取版本管理列表
	 *
	 */
	public function getUpdateInfoList($params)
	{
		$url = "getUpdateInfoList";
		return $this->post(self::SERVICE_NAME, $url, $params, "application/json;charset=UTF-8");
	}

	/**
	 * 获取版本管理列表总记录数
	 *
	 */
	public function getUpdateInfoCount($params)
	{
		$url = "getUpdateInfoCount";
		return $this->post(self::SERVICE_NAME, $url, $params, "application/json;charset=UTF-8");
	}


	/**
	 * 根据id获取版本信息
	 *
	 */
	public function getUpdateInfoById($params)
	{
		$url = "getUpdateInfoById";
		return $this->post(self::SERVICE_NAME, $url, $params, "application/json;charset=UTF-8");
	}

	/**
	 * 根据最新的版本信息
	 *
	 */
	public function getLatestUpdateInfo()
	{
		$url = "getLatestUpdateInfo";
		return $this->post(self::SERVICE_NAME, $url);
	}


	/**
	 * 删除版本信息
	 *
	 */
	public function deleteUpdateInfos($params)
	{
		$url = "deleteUpdateInfos";
		return $this->post(self::SERVICE_NAME, $url, $params, "application/json;charset=UTF-8");
	}

	/**
	 * 获取客户端异常详细信息
	 *
	 */
	public function getCrashReportById($params)
	{
		$url = "getCrashReportById";
		return $this->post(self::SERVICE_NAME, $url, $params, "application/json;charset=UTF-8");
	}

	/**
	 * 获取客户端异常信息列表
	 *
	 */
	public function getCrashReportList($params)
	{
		$url = "getCrashReportList";
		return $this->post(self::SERVICE_NAME, $url, $params, "application/json;charset=UTF-8");
	}

	/**
	 * 获取客户端异常信息列表总记录数
	 *
	 */
	public function getCrashReportCount($params)
	{
		$url = "getCrashReportCount";
		return $this->post(self::SERVICE_NAME, $url, $params, "application/json;charset=UTF-8");
	}

	/**
	 * 解决异常信息
	 *
	 */
	public function solveCrashReport($params)
	{
		$url = "solveCrashReport";
		return $this->post(self::SERVICE_NAME, $url, $params, "application/json;charset=UTF-8");
	}

	/**
	 * 获取用户反馈信息
	 *
	 */
	public function getFeedBackById($params)
	{
		$url = "getFeedBackById";
		return $this->post(self::SERVICE_NAME, $url, $params, "application/json;charset=UTF-8");
	}

	/**
	 * 获取用户反馈信息列表
	 *
	 */
	public function getFeedBackList($params)
	{
		$url = "getFeedBackList";
		return $this->post(self::SERVICE_NAME, $url, $params, "application/json;charset=UTF-8");
	}

	/**
	 * 获取用户反馈信息列表总记录数
	 *
	 */
	public function getFeedBackCount($params)
	{
		$url = "getFeedBackCount";
		return $this->post(self::SERVICE_NAME, $url, $params, "application/json;charset=UTF-8");
	}

	/**
	 * 回复用户的反馈
	 *
	 */
	public function replyFeedBack($params)
	{
		$url = "replyFeedBack";
		return $this->post(self::SERVICE_NAME, $url, $params, "application/json;charset=UTF-8");
	}


	/**
	 * 获取检索关键字列表总记录数
	 *
	 */
	public function getSearchKeywordsCount($params)
	{
		$url = "getSearchKeywordsCount";
		return $this->post(self::SERVICE_NAME, $url, $params, "application/json;charset=UTF-8");
	}

	/**
	 * 获取检索关键字信息列表
	 *
	 */
	public function getSearchKeywords($params)
	{
		$url = "getSearchKeywords";
		return $this->post(self::SERVICE_NAME, $url, $params, "application/json;charset=UTF-8");
	}



	/**
	 * 获取用户信息列表
	 *
	 */
	public function getUserInfoList($params)
	{
		$url = "getUserInfoList";
		return $this->post(self::SERVICE_NAME, $url, $params, "application/json;charset=UTF-8");
	}

	/**
	 * 获取用户信息列表条目
	 *
	 */
	public function getUserInfoCount($params)
	{
		$url = "getUserInfoCount";
		return $this->post(self::SERVICE_NAME, $url, $params, "application/json;charset=UTF-8");
	}

	/**
	 * 根据用户id获取用户信息
	 *
	 */
	public function getUserInfoById($params)
	{
		$url = "getUserInfoById";
		return $this->post(self::SERVICE_NAME, $url, $params, "application/json;charset=UTF-8");
	}

	/**
	 * 获取用户username获取用户信息
	 *
	 */
	public function getUserInfoByUsername($params)
	{
		$url = "getUserInfoByUsername";
		return $this->post(self::SERVICE_NAME, $url, $params, "application/json;charset=UTF-8");
	}

	/**
	 * 添加一条Loader信息
	 *
	 */
	public function addLoader($params)
	{
		$url = "addLoader";
		return $this->post(self::SERVICE_NAME, $url, $params, "application/json;charset=UTF-8");
	}

	/**
	 * 更新一条Loader信息
	 *
	 */
	public function updateLoader($params)
	{
		$url = "updateLoader";
		return $this->post(self::SERVICE_NAME, $url, $params, "application/json;charset=UTF-8");
	}
	
	/**
	 * 删除一条Loader信息
	 *
	 */
	public function deleteLoader($params)
	{
		$url = "deleteLoader";
		return $this->post(self::SERVICE_NAME, $url, $params, "application/json;charset=UTF-8");
	}

	/**
	 * 获取Loader列表数目
	 *
	 */
	public function getLoaderCount($params)
	{
		$url = "getLoaderCount";
		return $this->post(self::SERVICE_NAME, $url, $params, "application/json;charset=UTF-8");
	}

	/**
	 * 获取Loader列表
	 *
	 */
	public function getLoaderList($params)
	{
		$url = "getLoaderList";
		return $this->post(self::SERVICE_NAME, $url, $params, "application/json;charset=UTF-8");
	}

	/**
	 * 根据id获取Loader
	 *
	 */
	public function getAPPLoaderById($params)
	{
		$url = "getAPPLoaderById";
		return $this->post(self::SERVICE_NAME, $url, $params, "application/json;charset=UTF-8");
	}

	/**
	 * 获取有效的Loader
	 *
	 */
	public function getLatestAPPLoader($params)
	{
		$url = "getLatestAPPLoader";
		return $this->post(self::SERVICE_NAME, $url, $params, "application/json;charset=UTF-8");
	}

	public function getLoaderUrl(){
		$urlParam=array('addLoader');
		$url=implode('/',$urlParam);
		$restUrl = $this->getUri(self::SERVICE_NAME, $url);
		return $restUrl;
	}
	
	public function getBannerUrl(){
		$urlParam=array('addBanner');
		$url=implode('/',$urlParam);
		$restUrl = $this->getUri(self::SERVICE_NAME, $url);
		return $restUrl;
	}

	/**
	 * 根据id获取Loader图片
	 *
	 */
	public function downLoadLoaderImageById($params)
	{
		$urlParam=array('downLoadLoaderImageById',$params);
		$url=implode('/', $urlParam);
		return $this->get(self::SERVICE_NAME, $url);
	}
	
	/**
	 * 根据日志列表
	 *
	 */
	public function getLogList($params)
	{
		$url = "getLogList";
		return $this->post(self::SERVICE_NAME, $url, $params, "application/json;charset=UTF-8");
	}
	
	/**
	 * 获取日志列表数目
	 *
	 */
	public function getLogCount($params)
	{
		$url = "getLogCount";
		return $this->post(self::SERVICE_NAME, $url, $params, "application/json;charset=UTF-8");
	}
	
	/**
	 * 根据id获取log日志信息
	 *
	 */
	public function getAPPLogById($params)
	{
		$url = "getAPPLogById";
		return $this->post(self::SERVICE_NAME, $url, $params, "application/json;charset=UTF-8");
	}
	
	/**
	 * 获取版块文章数量
	 *
	 */
	public function getPublishTopicCount($params)
	{
		$url = "getPublishTopicCount";
		return $this->post(self::SERVICE_NAME, $url, $params, "application/json;charset=UTF-8");
	}
	
	/**
	 * 获取版块文章列表
	 *
	 */
	public function getPublishTopicList($params)
	{
		$url = "getPublishTopicList";
		return $this->post(self::SERVICE_NAME, $url, $params, "application/json;charset=UTF-8");
	}
	
	/**
	 * 下载日志
	 * 
	 */
	public function getAPPLogUrl($params){
		$urlParam=array('downLoadLogFile', $params);
		$url=implode('/',$urlParam);
		$restUrl = $this->getUri(self::SERVICE_NAME, $url);
		return $restUrl;
	}
	
	/**
	 * 根据获取版块文章主题
	 *
	 */
	public function getPublishTopicById($params)
	{
		$url = "getPublishTopicById";
		return $this->post(self::SERVICE_NAME, $url, $params, "application/json;charset=UTF-8");
	}
	
	/**
	 * 获取配置
	 * 
	 * @param unknown_type $params
	 */
	public function getConfigValue($params)
	{
		$url = "getConfigValue";
		return $this->post(self::SERVICE_NAME, $url, $params, "application/json;charset=UTF-8");
	}
	
	/**
	 * 获取配置
	 * 
	 * @param unknown_type $params
	 */
	public function getConfigById($params)
	{
		$url = "getConfigById";
		return $this->post(self::SERVICE_NAME, $url, $params, "application/json;charset=UTF-8");
	}
	
	/**
	 * 设置配置
	 * 
	 * @param unknown_type $params
	 */
	public function setConfigValue($params)
	{
		$url = "setConfigValue";
		return $this->post(self::SERVICE_NAME, $url, $params, "application/json;charset=UTF-8");
	}
	
	/**
	 * 获取配置列表
	 *
	 * @param unknown_type $params
	 */
	public function getConfigList($params)
	{
		$url = "getConfigList";
		return $this->post(self::SERVICE_NAME, $url, $params, "application/json;charset=UTF-8");
	}
	
	/**
	 * 获取配置列表数目
	 *
	 * @param unknown_type $params
	 */
	public function getConfigCount($params)
	{
		$url = "getConfigCount";
		return $this->post(self::SERVICE_NAME, $url, $params, "application/json;charset=UTF-8");
	}
	
	/**
	 * 删除Config信息
	 *
	 */
	public function deleteConfig($params)
	{
		$url = "deleteConfig";
		return $this->post(self::SERVICE_NAME, $url, $params, "application/json;charset=UTF-8");
	}
	
	/**
	 * 获取编研内容
	 * 
	 * @param unknown_type $id
	 */
	public function getResearchFormContent($id) 
	{
		$urlParam = array('getEssResearchFormHtmlContent',$id);
		$url = implode('/', $urlParam);
		return $this->post(self::SERVICE_NAME, $url, null, "application/json;charset=UTF-8");
	}
	
	/**
	 * 获取发布信息内容
	 *
	 * @param unknown_type $id
	 */
	public function getPublishTopicDetail($params)
	{
		$url = "getPublishTopicDetail";
		return $this->post(self::SERVICE_NAME, $url, $params, "application/json;charset=UTF-8");
	}
	
	/**
	 * 获取详细的编研信息
	 *
	 * @param unknown_type $id
	 */
	public function getResearchFormById($id)
	{
		$urlParam = array('getResearchFormById',$id);
		$url = implode('/', $urlParam);
		return $this->post(self::SERVICE_NAME, $url, null, "application/json;charset=UTF-8");
	}
	
	/**
	 * 修改消息
	 * 
	 * @param unknown_type $params
	 */
	public function updateAPPMessage($params)
	{
		$url = "updateAPPMessage";
		return $this->post(self::SERVICE_NAME, $url, $params, "application/json;charset=UTF-8");
	}
	
	
}